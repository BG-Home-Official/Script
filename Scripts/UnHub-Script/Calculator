local SG = Instance.new("ScreenGui")

SG.Parent = game.CoreGui

local frame = Instance.new("Frame")

frame.Size = UDim2.new(0, 200, 0, 270)

frame.Position = UDim2.new(0.5, -100, 0.5, -125)

frame.BackgroundColor3 = Color3.fromRGB(0, 200, 255)

frame.Parent = SG

frame.Draggable = true

frame.Active = true

frame.BorderColor3 = Color3.fromRGB(0, 0, 0)

frame.BorderSizePixel = 3

local textBox = Instance.new("TextBox")

textBox.Size = UDim2.new(0, 180, 0, 40)

textBox.Position = UDim2.new(0, 10, 0, 20)

textBox.Text = ""

textBox.PlaceholderText = "0"

textBox.PlaceholderColor3 = Color3.fromRGB(0, 0, 0)

textBox.Active = false

textBox.BorderColor3 = Color3.fromRGB(0, 0, 0)

textBox.BorderSizePixel = 2

textBox.TextScaled = true

textBox.Font = Enum.Font.SciFi

textBox.TextXAlignment = Enum.TextXAlignment.Right

textBox.BackgroundColor3 = Color3.fromRGB(255, 200, 255)

textBox.Parent = frame

local buttonNames = {"7", "8", "9", "+", "4", "5", "6", "-", "1", "2", "3", "*", "0", "C", "=", "/"}

for i, name in ipairs(buttonNames) do

    local button = Instance.new("TextButton")

    button.Size = UDim2.new(0, 40, 0, 40)

    button.Text = name

    button.TextScaled = true

    button.BackgroundColor3 = Color3.fromRGB(255, 200, 255)

    button.Parent = frame

    button.BorderColor3 = Color3.fromRGB(0, 0, 0)

    button.BorderSizePixel = 2

    

    local x = ((i - 1) % 4) * 45 + 12

    local y = math.floor((i - 1) / 4) * 50 + 70

    button.Position = UDim2.new(0, x, 0, y)

end

local C = Instance.new("TextButton")

C.Size = UDim2.new(0, 80, 0, 30)

C.Position = UDim2.new(0, 150, 0, -5)

C.TextSize = 15

C.Text = "X"

C.BackgroundTransparency = 1

C.Font = Enum.Font.ArimoBold

C.Parent = frame

local function evaluateExpression(expression)

    local func = loadstring("return " .. expression)

    if func then

        local success, result = pcall(func)

        if success then

            return result

        else

            return "Error"

        end

    else

        return "Error"

    end

end

local input = ""

local function onButtonClick(button)

    local buttonText = button.Text

    if buttonText == "=" then

        textBox.Text = tostring(evaluateExpression(input))

        input = textBox.Text

    elseif buttonText == "C" then

        input = ""

        textBox.Text = input

    else

        input = input .. buttonText

        textBox.Text = input

    end

end

for _, button in ipairs(frame:GetChildren()) do

    if button:IsA("TextButton") then

        button.MouseButton1Click:Connect(function()

            onButtonClick(button)

        end)

    end

end

local dragging

local dragInput

local dragStart

local startPos

local function update(input)

    local delta = input.Position - dragStart

    frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)

end

frame.InputBegan:Connect(function(input)

    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then

        dragging = true

        dragStart = input.Position

        startPos = frame.Position

        

        input.Changed:Connect(function()

            if input.UserInputState == Enum.UserInputState.End then

                dragging = false

            end

        end)

    end

end)

frame.InputChanged:Connect(function(input)

    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then

        dragInput = input

    end

end)

game:GetService("UserInputService").InputChanged:Connect(function(input)

    if dragging and input == dragInput then

        update(input)

    end

end)

C.MouseButton1Click:Connect(function()

    SG:Destroy()

end)