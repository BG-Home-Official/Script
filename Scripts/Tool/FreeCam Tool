local plr = game.Players.LocalPlayer

local hum = plr.Character.HumanoidRootPart

local UIS = game:GetService("UserInputService")

local RS = game:GetService("RunService")

local cam = workspace.CurrentCamera

local freecamEnabled = false

local keysDown = {}

local rotating = false

local touchPos = nil

local speed

local function activateFreecam()

	local onMobile = not UIS.KeyboardEnabled	cam.CameraType = Enum.CameraType.Scriptable

	speed = 1

	local sens = 0.3

	if onMobile then sens *= 2 end

	keysDown = {}

	rotating = false

	hum.Anchored = true

	local function renderStepped()

		if not freecamEnabled then return end

		if rotating then

			local delta = UIS:GetMouseDelta()

			local cf = cam.CFrame

			local yAngle = cf:ToEulerAngles(Enum.RotationOrder.YZX)

			local newAmount = math.deg(yAngle) + delta.Y

			if newAmount > 65 or newAmount < -65 then

				if not (yAngle < 0 and delta.Y < 0) and not (yAngle > 0 and delta.Y > 0) then

					delta = Vector2.new(delta.X, 0)

				end

			end

			cf *= CFrame.Angles(-math.rad(delta.Y), 0, 0)

			cf = CFrame.Angles(0, -math.rad(delta.X), 0) * (cf - cf.Position) + cf.Position

			cf = CFrame.lookAt(cf.Position, cf.Position + cf.LookVector)

			if delta ~= Vector2.new(0, 0) then

				cam.CFrame = cam.CFrame:Lerp(cf, sens)

			end

			UIS.MouseBehavior = Enum.MouseBehavior.LockCurrentPosition

		else

			UIS.MouseBehavior = Enum.MouseBehavior.Default

		end

		if keysDown["Enum.KeyCode.W"] then

			cam.CFrame *= CFrame.new(Vector3.new(0, 0, -speed))

		end

		if keysDown["Enum.KeyCode.A"] then

			cam.CFrame *= CFrame.new(Vector3.new(-speed, 0, 0))

		end

		if keysDown["Enum.KeyCode.S"] then

			cam.CFrame *= CFrame.new(Vector3.new(0, 0, speed))

		end

		if keysDown["Enum.KeyCode.D"] then

			cam.CFrame *= CFrame.new(Vector3.new(speed, 0, 0))

		end

	end

	RS:BindToRenderStep("FreecamRender", Enum.RenderPriority.Camera.Value, renderStepped)

	local validKeys = {"Enum.KeyCode.W", "Enum.KeyCode.A", "Enum.KeyCode.S", "Enum.KeyCode.D"}

	UIS.InputBegan:Connect(function(Input)

		for i, key in pairs(validKeys) do

			if key == tostring(Input.KeyCode) then

				keysDown[key] = true

			end

		end

		if Input.UserInputType == Enum.UserInputType.MouseButton2 or (Input.UserInputType == Enum.UserInputType.Touch and UIS:GetMouseLocation().X > (cam.ViewportSize.X / 2)) then

			rotating = true

		end

		if Input.UserInputType == Enum.UserInputType.Touch then

			if Input.Position.X < cam.ViewportSize.X / 2 then

				touchPos = Input.Position

			end

		end

	end)

	UIS.InputEnded:Connect(function(Input)

		for key, _ in pairs(keysDown) do

			if key == tostring(Input.KeyCode) then

				keysDown[key] = false

			end

		end

		if Input.UserInputType == Enum.UserInputType.MouseButton2 or (Input.UserInputType == Enum.UserInputType.Touch and UIS:GetMouseLocation().X > (cam.ViewportSize.X / 2)) then

			rotating = false

		end

		if Input.UserInputType == Enum.UserInputType.Touch and touchPos then

			if Input.Position.X < cam.ViewportSize.X / 2 then

				touchPos = nil

				keysDown["Enum.KeyCode.W"] = false

				keysDown["Enum.KeyCode.A"] = false

				keysDown["Enum.KeyCode.S"] = false

				keysDown["Enum.KeyCode.D"] = false

			end

		end

	end)

	UIS.TouchMoved:Connect(function(input)

		if touchPos then

			if input.Position.X < cam.ViewportSize.X / 2 then

				if input.Position.Y < touchPos.Y then

					keysDown["Enum.KeyCode.W"] = true

					keysDown["Enum.KeyCode.S"] = false

				else

					keysDown["Enum.KeyCode.W"] = false

					keysDown["Enum.KeyCode.S"] = true

				end

				if input.Position.X < (touchPos.X - 15) then

					keysDown["Enum.KeyCode.A"] = true

					keysDown["Enum.KeyCode.D"] = false

				elseif input.Position.X > (touchPos.X + 15) then

					keysDown["Enum.KeyCode.A"] = false

					keysDown["Enum.KeyCode.D"] = true

				else

					keysDown["Enum.KeyCode.A"] = false

					keysDown["Enum.KeyCode.D"] = false

				end

			end

		end

	end)

end

local function deactivateFreecam()

	freecamEnabled = false

	cam.CameraType = Enum.CameraType.Custom

   hum.Anchored = false

	UIS.MouseBehavior = Enum.MouseBehavior.Default

	RS:UnbindFromRenderStep("FreecamRender")

end

plr.Character.Humanoid.Died:Connect(function()

	if freecamEnabled then

		deactivateFreecam()

	end

end)

local toggle = true

local player = game.Players.LocalPlayer.Character.Humanoid

tool = Instance.new("Tool")

tool.RequiresHandle = false

tool.Name = "Freecam Disabled"

tool.Equipped:Connect(function()
local Tool
    for i, v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
        if v:IsA("Tool") and v.Name == tool.Name then
            Tool = v
        end
    end
if toggle then

toggle = false

Tool.Name = "Freecam Enable"

task.wait()

Tool.Parent = game.Players.LocalPlayer.Backpack

if not freecamEnabled then

   freecamEnabled = true

   activateFreecam()

end

else

toggle = true

Tool.Name = "Freecam Disabled"

task.wait()

Tool.Parent = game.Players.LocalPlayer.Backpack

if freecamEnabled then

   deactivateFreecam()

end

end

end)

tool.Parent = game.Players.LocalPlayer.Backpack